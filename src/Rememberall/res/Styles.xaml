<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Rememberall.res">

    <!-- Border: 1px bottom, dark -->
    <Style
        x:Key="Border_1px_Bottom_Dark"
        TargetType="{x:Type Border}">
        <Setter Property="BorderThickness" Value="0 0 0 1"/>
        <Setter Property="BorderBrush" Value="{StaticResource line_dark}"/>
    </Style>

    <!-- Border: 1px, dark -->
    <Style
        x:Key="Border_1px_Dark"
        TargetType="{x:Type Border}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource line_dark}"/>
    </Style>

    <!-- Button -->
    <Style
        x:Key="Button"
        TargetType="{x:Type Button}"
        BasedOn="{StaticResource {x:Type Button}}">
        <!-- Overwrite properties we want to change from the "BasedOn" style -->
        <Setter Property="Padding" Value="16 8"/>
        <Setter Property="FontSize" Value="{StaticResource FontSize.Normal}"/>
        <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
        <Setter Property="Foreground" Value="{StaticResource foreground_highEmphasis}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="border"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        SnapsToDevicePixels="True">
                        <Border
                            x:Name="overlay"
                            Background="{StaticResource Button.Static.Overlay}"
                            SnapsToDevicePixels="True">
                            <ContentPresenter
                                x:Name="contentPresenter"
                                RecognizesAccessKey="True"
                                Margin="{TemplateBinding Padding}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False"/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{StaticResource Button.MouseOver.Overlay}" TargetName="overlay" />
                            <Setter Property="BorderBrush" Value="{StaticResource Button.MouseOver.Border}" TargetName="border" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="{StaticResource Button.Pressed.Overlay}" TargetName="overlay" />
                            <Setter Property="BorderBrush" Value="{StaticResource Button.Pressed.Border}" TargetName="border" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{StaticResource Button.Disabled.Overlay}" TargetName="overlay" />
                            <Setter Property="BorderBrush" Value="{StaticResource Button.Disabled.Border}" TargetName="border" />
                            <!--<Setter Property="TextElement.Foreground" Value="{StaticResource foreground_disabled}" TargetName="contentPresenter" />-->
                            <Setter Property="Opacity" Value="0.38" TargetName="contentPresenter" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Borderless Button - for icon buttons in LoginDetails view -->
    <Style
        x:Key="Button.Borderless"
        TargetType="{x:Type Button}"
        BasedOn="{StaticResource Button}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="overlay"
                        Background="{StaticResource Button.Borderless.Static.Overlay}"
                        SnapsToDevicePixels="True">
                        <ContentPresenter
                            x:Name="contentPresenter"
                            RecognizesAccessKey="True"
                            Margin="{TemplateBinding Padding}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{StaticResource Button.Borderless.MouseOver.Overlay}" TargetName="overlay" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="{StaticResource Button.Borderless.Pressed.Overlay}" TargetName="overlay" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{StaticResource Button.Borderless.Disabled.Overlay}" TargetName="overlay" />
                            <!--<Setter Property="TextElement.Foreground" Value="{StaticResource foreground_disabled}" TargetName="contentPresenter" />-->
                            <Setter Property="Opacity" Value="0.38" TargetName="contentPresenter" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- TextBox -->
    <Style
        x:Key="TextBox"
        TargetType="{x:Type TextBox}"
        BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="Background" Value="{StaticResource TextBox.Static.Background}"/>
        <Setter Property="Foreground" Value="{StaticResource foreground_highEmphasis}"/>
        <Setter Property="CaretBrush" Value="White"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="8"/>
        <Setter Property="FontSize" Value="{StaticResource FontSize.Normal}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border
                        x:Name="border"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}"
                        SnapsToDevicePixels="True">
                        <ScrollViewer
                            x:Name="PART_ContentHost"
                            Focusable="false"
                            HorizontalScrollBarVisibility="Hidden"
                            VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            <Setter Property="Background" TargetName="border" Value="{StaticResource TextBox.MouseOver.Background}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            <Setter Property="Background" TargetName="border" Value="{StaticResource TextBox.Focus.Background}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    
    <!-- TextBox.Dark - used for filter text -->
    <Style
        x:Key="TextBox.Dark"
        TargetType="{x:Type TextBox}"
        BasedOn="{StaticResource TextBox}">
        <Setter Property="Background" Value="{StaticResource TextBox.Dark.Static.Background}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border
                        x:Name="border"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}"
                        SnapsToDevicePixels="True">
                        <ScrollViewer
                            x:Name="PART_ContentHost"
                            Focusable="false"
                            HorizontalScrollBarVisibility="Hidden"
                            VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Dark.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Dark.Focus.Border}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>